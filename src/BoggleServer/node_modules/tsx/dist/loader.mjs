import{r as s}from"./pkgroll_create-require-CddX1PP_.mjs";import i from"node:repl";import{transform as l}from"esbuild";import{globalPreload as D,initialize as F,load as G,resolve as H}from"./esm/index.mjs";import"module";import"node:worker_threads";import"./node-features-Dcn4STxq.mjs";import"./register-k5BGI511.mjs";import"node:module";import"node:url";import"./index-CteD9jHM.mjs";import"node:crypto";import"node:fs";import"node:path";import"node:os";import"./temporary-directory-CwHp0_NW.mjs";import"./is-relative-path-pattern-DuKsZATx.mjs";import"./client-Cg7nS93t.mjs";import"node:net";import"./get-pipe-path-CmcG6VNd.mjs";import"get-tsconfig";const n=r=>{const{eval:e}=r,p=async function(t,m,o,a){try{t=(await l(t,{sourcefile:o,loader:"ts",tsconfigRaw:{compilerOptions:{preserveValueImports:!0}},define:{require:"global.require"}})).code}catch{}return e.call(this,t,m,o,a)};r.eval=p},{start:c}=i;i.start=function(){const r=Reflect.apply(c,this,arguments);return n(r),r},s("./cjs/index.cjs");export{D as globalPreload,F as initialize,G as load,H as resolve};
