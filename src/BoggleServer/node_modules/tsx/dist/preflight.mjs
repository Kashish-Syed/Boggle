import{r as c}from"./pkgroll_create-require-CddX1PP_.mjs";import{constants as p}from"node:os";import{isMainThread as f}from"node:worker_threads";import{c as l}from"./client-Cg7nS93t.mjs";import"./suppress-warnings.mjs";import"module";import"node:net";import"./get-pipe-path-CmcG6VNd.mjs";import"node:path";import"./temporary-directory-CwHp0_NW.mjs";const m=(e,s)=>{for(const t of e)process.on(t,r=>{s(r),process.listenerCount(t)===0&&process.exit(128+p.signals[t])});const{listenerCount:n,listeners:i}=process;process.listenerCount=function(t){let r=Reflect.apply(n,this,arguments);return e.includes(t)&&(r-=1),r},process.listeners=function(t){const r=Reflect.apply(i,this,arguments);return e.includes(t)?r.filter(o=>o!==s):r}};f&&(c("./cjs/index.cjs"),(async()=>{const e=await l;e&&m(["SIGINT","SIGTERM"],s=>{e({type:"signal",signal:s})})})());
