import c from"node:module";import S from"node:fs";import{parseTsconfig as v,getTsconfig as E,createFilesMatcher as O,createPathsMatcher as j}from"get-tsconfig";import{p as M,t as b,a as g}from"./index-CteD9jHM.mjs";import{s as u,i as _,a as P,r as A}from"./is-relative-path-pattern-DuKsZATx.mjs";import{p as T}from"./client-Cg7nS93t.mjs";import f from"node:path";const N=e=>{if(e.includes("import")||e.includes("export"))try{return M(e)[3]}catch{return!0}return!1},R=/\.[cm]?tsx?$/,i=process.env.TSX_TSCONFIG_PATH?{path:f.resolve(process.env.TSX_TSCONFIG_PATH),config:v(process.env.TSX_TSCONFIG_PATH)}:E(),I=[".cts",".mts",".ts",".tsx",".jsx"],C=[".js",".cjs",".mjs"],D=i&&O(i),m=Object.assign(Object.create(null),c._extensions),G=m[".js"],h=(e,s)=>{T?.send&&T.send({type:"dependency",path:s});const n=I.some(t=>s.endsWith(t)),r=C.some(t=>s.endsWith(t));if(!n&&!r)return G(e,s);let o=S.readFileSync(s,"utf8");if(s.endsWith(".cjs")){const t=b(s,o);t&&(o=u()?_(t):t.code)}else if(n||N(o)){const t=g(o,s,{tsconfigRaw:D?.(s)});o=u()?_(t):t.code}e._compile(o,s)};[".js",".ts",".tsx",".jsx"].forEach(e=>{m[e]=h}),Object.defineProperty(m,".mjs",{value:h,enumerable:!1});const H=`${f.sep}node_modules${f.sep}`,x=i&&j(i),p=c._resolveFilename.bind(c),y=(e,s,n,r)=>{const o=A(e);if(s?.filename&&(R.test(s.filename)||i?.config.compilerOptions?.allowJs)&&o)for(const t of o)try{return p(t,s,n,r)}catch(l){const{code:a}=l;if(a!=="MODULE_NOT_FOUND"&&a!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw l}},F=(e,s,n,r)=>{const o=e.indexOf("?");if(o!==-1&&(e=e.slice(0,o)),x&&!P.test(e)&&!s?.filename?.includes(H)){const l=x(e);for(const a of l){const d=y(a,s,n,r);if(d)return d;try{return p(a,s,n,r)}catch{}}}const t=y(e,s,n,r);return t||p(e,s,n,r)},X=()=>{const{sourceMapsEnabled:e}=process,{_extensions:s,_resolveFilename:n}=c;return process.setSourceMapsEnabled(!0),c._extensions=m,c._resolveFilename=F,()=>{e===!1&&process.setSourceMapsEnabled(!1),c._extensions=s,c._resolveFilename=n}};export{F as a,X as r};
