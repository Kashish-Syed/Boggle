import{r as e}from"../../pkgroll_create-require-CddX1PP_.mjs";import{r as n,a as c}from"../../global-require-patch-CXcIoEaa.mjs";import m from"node:path";import{fileURLToPath as u}from"node:url";import"module";import"node:module";import"node:fs";import"get-tsconfig";import"../../index-CteD9jHM.mjs";import"esbuild";import"node:crypto";import"node:os";import"../../temporary-directory-CwHp0_NW.mjs";import"../../is-relative-path-pattern-DuKsZATx.mjs";import"../../client-Cg7nS93t.mjs";import"node:net";import"../../get-pipe-path-CmcG6VNd.mjs";const p=(r,t)=>{if(!t)throw new Error("The current file path (__filename or import.meta.url) must be provided in the second argument of tsx.require()");return(typeof t=="string"&&t.startsWith("file://")||t instanceof URL)&&(t=u(t)),m.resolve(m.dirname(t),r)},o=(r,t)=>{const i=p(r,t),s=n();try{return e(i)}finally{s()}},a=(r,t,i)=>{const s=p(r,t);return c(s,module,!1,i)};a.paths=e.resolve.paths,o.resolve=a,o.main=e.main,o.extensions=e.extensions,o.cache=e.cache;export{n as register,o as require};
